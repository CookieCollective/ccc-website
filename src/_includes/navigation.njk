<div class="main-bar frost">
        <div class="logo">
        </div>
        <div class="horizontal-scroller">
            <div class="text-icon-combo"><a class="navlink" href="/gallery">{% phicon "folder" %} <span>Browse</span></a></div>
            <div class="text-icon-combo"><a class="navlink" href="javascript:getRandomProject()">{% phicon "scribble-loop" %} <span>Wander</span></a></div>
            <div class="text-icon-combo"><a class="navlink" href="/wall-of-sound">{% phicon "wall" %} <span>Wall</span></a></div>
            <div class="text-icon-combo"><a class="navlink" href="/">{% phicon "film-reel" %} <span>Cinema</span></a></div>
            <div class="text-icon-combo"><a class="navlink" href="/fanzine">{% phicon "book-open-text" %} <span>Fanzine</span></a></div>
            <div class="text-icon-combo"><a class="navlink" href="/about">{% phicon "flying-saucer" %} <span>More</span></a></div>
            <div class="text-icon-combo"><a class="navlink" href="/">{% phicon "cookie" %}</a></div>
        </div>

    </div>
</div>

<script>
    function myFunction() {
      var popup = document.getElementById("myPopup");
      popup.classList.toggle("show");
    }

    let folders = [];
    let shuffledFolders = [];

    function shuffle(array) {
        for (let i = array.length - 1; i > 0; i--) {
            const j = Math.floor(Math.random() * (i + 1));
            [array[i], array[j]] = [array[j], array[i]];
        }
        return array;
    }

    function loadState() {
        const savedFolders = localStorage.getItem('shuffledFolders');
        if (savedFolders) {
            shuffledFolders = JSON.parse(savedFolders);
        }
    }

    function saveState() {
        localStorage.setItem('shuffledFolders', JSON.stringify(shuffledFolders));
    }

    function getRandomProject() {
        if (shuffledFolders.length === 0) {
            if (folders.length === 0) {
                alert("Projects are still loading, please try again.");
                return;
            }
            shuffledFolders = shuffle([...folders]);
        }
        const randomFolder = shuffledFolders.pop();
        saveState();
        window.location.href = `/projects/${randomFolder}`;
    }

    fetch('/projects_list.json')
        .then(response => response.json())
        .then(data => {
            folders = data.projects.map(project => {
                return project.folder.toLowerCase().replace(/ /g, '-');
            });

            if (shuffledFolders.length === 0) {
                shuffledFolders = shuffle([...folders]);
                saveState();
            }
        });

    loadState();

    // Add event listeners for showing/hiding the navigation bar
    const mainBar = document.querySelector('.main-bar');

    // mainBar.addEventListener('mouseenter', () => {
    //     clearTimeout(hideTimeout);
    //     mainBar.classList.remove('hidden');
    // });

    // mainBar.addEventListener('mouseleave', () => {
    //     hideTimeout = setTimeout(() => {
    //         mainBar.classList.add('hidden');
    //     }, 3000);
    // });

    // hideTimeout = setTimeout(() => {
    //     mainBar.classList.add('hidden');
    // }, 3000);

</script>

<style>
    :root {
        --navigation-size: 50px;
        background-color: black;
    }

    body {
        margin: 0;
        padding: 0;
        font-family: "IBM Plex Mono", sans-serif;
    }

    .text-icon-combo {
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .frost {
        backdrop-filter: blur(0px) brightness(50%);
    }

    .main-bar {
        display: flex;
        border-radius: 0px;
        width: 100%;
        height: var(--navigation-size);
        justify-content: space-between;
        align-items: center;
        white-space: nowrap;
        position: fixed;
        top: 0;
        z-index: 10;
        padding-top: 5px;
        padding-bottom: 5px;
        transition: transform 0.3s ease;
    }

    .main-bar.hidden {
        transform: translateY(calc(-1 * var(--navigation-size)));
    }

    .logo img {
        line-height: var(--navigation-size);
        padding: 0 0px;
    }

    .logo-link {
        text-decoration: none;
        color: white;
    }

    .logo a:hover {
        background-color: #333;
        color: white;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

    .horizontal-scroller {
        display: flex;
        gap: 16px;
        padding: 16px;
        white-space: nowrap;
        overflow-x: scroll;
        scrollbar-width: none;
        overflow-y: hidden;
    }

    .navlink {
        align-items: center;
        white-space: nowrap;
        text-decoration: none;
        color: white;
        font-size: 2vh;
        padding-left: 1vh;
        padding-right: 1vh;
        width: 100%;
    }
    .navlink:hover {
        background: white;
        color: black;
        padding: 1vh;
        padding-bottom: 1vh;
        border-radius: 8px;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

</style>
